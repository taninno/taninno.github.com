<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: UX | taninnosorani blog]]></title>
  <link href="http://taninno.github.io/blog/categories/ux/atom.xml" rel="self"/>
  <link href="http://taninno.github.io/"/>
  <updated>2015-07-20T17:09:53+09:00</updated>
  <id>http://taninno.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[シナリオに対するエンジニアとの共通理解]]></title>
    <link href="http://taninno.github.io/blog/2014/08/31/plot-based-on-sequence-diagram/"/>
    <updated>2014-08-31T16:44:53+09:00</updated>
    <id>http://taninno.github.io/blog/2014/08/31/plot-based-on-sequence-diagram</id>
    <content type="html"><![CDATA[<p>スタートアップに適したUI設計を試している中で、ペルソナ・シナリオ法を参考にエンジニアと協業しやすいシナリオ設計を記載しています。また内容は随時更新しています。</p>

<!-- more -->


<h2>シナリオを使ったサービスの設計</h2>

<p>UIを作る時に最初にPhotoshopで作り始めると手戻りが大変なので、その前にワイヤーフレーム（下書き）を描きますが、それでもワイヤーフレームを何枚も描くのは大変ので、精度を上げるためにユーザーの行動を文章で定義します。文章なら書き直しがあってもワイヤーフレームより楽です。<strong>さらにシナリオは具体的な画面要素には触れないので、ユーザビリティテストの手順書としても最適です</strong>。なのでシナリオを作っとくと後々楽になります。逆にシナリオを作らないとUIデザインの時に具体的な利用シーンが想像できず、誰が何のために操作するサービスなのかブレてしまう可能性があります。</p>

<h2>シナリオの下書きとしてのプロット</h2>

<p>ここでのシナリオは小説や台本のようなものを指します。そして、その小説には構想を練るための下書きとなるプロットが必要です。UIデザインをする上でこのプロットが重要だと思います。<strong>プロットはサービスに対するユーザーの時間軸上の行動や推測される発言内容を考えていき、そのために必要な機能や予想される不具合をまとめたものです</strong>。UIデザインの際にこの表があると、UIのバランスがブレないくなります。特に複数の画面に跨る場合は画面間の文脈が重要となるためにこの資料は必須です。時間が無い時はプロットだけを作成してシナリオを作らないこともありますが、プロットだけは必ず作るようにしています。</p>

<p><img class="<a" src="href="http://taninno.github.io/images/post/plot.png">http://taninno.github.io/images/post/plot.png</a>" width="720" title="auto" ></p>

<p>左から「タスクNo.」「タスク名」「ユーザーの行動」「ユーザーが思ったこと」「タスクを完了するのに必要な機能」「備考（予想される不具合）」を記載します。</p>

<p>上記の表は「ブループリント」や狭義の「カスタマージャーニーマップ（UXマップ）」と同じ役割かもしれませんが、ブループリントよりもサービス全体を網羅せず簡略化させ、ジャーニーマップと比較すると感情曲線は無くし、メインシナリオ+イレギュラーシナリオを含むイメージです。あくまでイメージですが、自分なりに必要最小限に絞ったものをプロットとしています。</p>

<h2>問題はプロット作りには時間が掛かること</h2>

<p>プロットがあることでユースケースが整理されUIが考えやすくなりますが、プロットを作るだけでもそれなりに時間がかかります。多くのUXデザイナーがいればいいですが、スタートアップなど人手が足りない時にはプロットの作成が怠りがちになります。私も忙しいときには楽をしていきなりPhotoshopでデザイン画を起こそうとしてしまいますが、大抵その後ユーザーがどういう気持でこの画面に訪れてきているのか分からなくなります。</p>

<h2>エンジニア自身がプロットを作成する</h2>

<p>そこで、プロットの作成をエンジニアの方にお願いするようにします（忙しいエンジニアの方にとっては面倒かもしれませんが）。ただいきなりプロットを依頼しても手間となってしまうため、<strong>エンジニアが慣れ親しんでいるユースケース図のオブジェクトをユーザーに置き換えて考えてもらいます</strong>。</p>

<p><img class="<a" src="href="http://taninno.github.io/images/post/sequence.png">http://taninno.github.io/images/post/sequence.png</a>" width="640" title="auto" ></p>

<p>縦のオブジェクトにはユーザー（ペルソナ）を当てます。ユーザーが複数ならオブジェクトを追加してもらいます。又、オブジェクトにはPCやモバイルなどのプラットフォームも用意します。それらのオブジェクトに対する操作やプッシュなどはシーケンス図のメッセージとして記載します。これによってプロットに記載する「タスクNo.」「タスク名」「ユーザーの行動」「タスクを完了するのに必要な機能」がユースケース図で置き換えられます。残りの「ユーザーが思ったこと」「備考（予想される不具合）」は考えなければなりませんが、既に時間軸上でユーザーの行動が記載されていれば作業時間を短くできます。</p>

<h2>最初は一緒に書きましょう</h2>

<p>シーケンス図によってプロットの作成が置き換えられたといっても「タスクを完了するのに必要な機能」自体が最適どうかはわかりません。ここはプロットの中でも特に何度も想像を繰り返す大変な項目欄ですが、ここをエンジニアの方と一緒に考えることで同じゴールを向いて作業できるようになり、エンジニアとの協業が後々楽になります。エンジニアとUIを誤認したまま進むよりは「タスクを完了するのに必要な機能」を具体的でなくても、どうなったらユーザーが喜ぶかを話し合っておくことが大切だと思います。何より炎上するような案件は大体ここが疎かになっていることが多いと思います。</p>

<h2>いずれはUXデザイナーがいなくても</h2>

<p>ユースケース図をエンジニアとUXデザイナーの共通言語にすることでゴールへの認識齟齬を防ぎ、エンジニアのUXセンスも高まっていきます。最初は共同で作成することが必要かと思いますが、エンジニアが慣れてきたらUXデザイナーが参加せずともシナリオが作成できるようになり、あとはUIデザイナーへ機能項目を伝えるだけで開発フローが完結します。これにより個々のプロットの作成が負担となっていたUXデザイナーがよりリサーチやアイディア、コンセプトに方にも注力できるようになります。エンジニアにとってはUX→UI→開発を一貫して行えるようになるようになります。</p>
]]></content>
  </entry>
  
</feed>
