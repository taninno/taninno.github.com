<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mock-up | taninnosorani blog]]></title>
  <link href="http://taninno.github.io/blog/categories/mock-up/atom.xml" rel="self"/>
  <link href="http://taninno.github.io/"/>
  <updated>2013-10-04T00:16:44+09:00</updated>
  <id>http://taninno.github.io/</id>
  <author>
    <name><![CDATA[taninno]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prototyperによるモックアップ中心のワークフロー]]></title>
    <link href="http://taninno.github.io/blog/2013/09/12/justinmind-prototyper/"/>
    <updated>2013-09-12T23:28:00+09:00</updated>
    <id>http://taninno.github.io/blog/2013/09/12/justinmind-prototyper</id>
    <content type="html"><![CDATA[<p>ワイヤーフレームとモックアップの関係とモバイル向けのモックアップツールに関することを記載しています。</p>

<br/>


<h3>1.モックアップのワークフロー</h3>

<p>アプリやWebサービス・サイトを作っていく全体の流れは以下のプロセスになります。</p>

<ol>
<li>理解</li>
<li>アイディア</li>
<li>ストーリー</li>
<li><strong>UI</strong></li>
<li>ビジュアルデザイン</li>
<li>開発</li>
<li>フィードバック</li>
</ol>


<p>詳細は<a href="http://taninno.github.io/blog/2013/05/16/my-ux-design-approach/">受諾型UXデザインアプローチ</a>を御覧ください。</p>

<p>上記の中で画面の要素やレイアウトを検討するのは4番の「UI」の中になります。UIでは「ストーリー」で考えた体験を実現するアプリのスケッチや画面詳細設計を行って形にしていきます。UIの各ステップは以下の3つを考えています。</p>

<ol>
<li>スケッチ</li>
<li><strong>モックアップ</strong></li>
<li>画面仕様書（画面詳細設計）</li>
</ol>


<p>このプロセスではスケッチの後にモックアップを作成します。以前はモックアップではなくワイヤーフレームを作成していました。</p>

<ol>
<li>スケッチ</li>
<li><strong>ワイヤーフレーム</strong></li>
<li>画面仕様書（画面詳細設計）</li>
</ol>


<br/>


<br/>


<h3>2.スケッチとワイヤーフレーム、モックアップ、プロトタイプの扱い</h3>

<p>モックアップやワイヤーフレーム、プロトタイプなどの言葉がどの範囲なのかを以下で定義します。これは人によっては異なるかと思いますので、ここでは以下の意味で進めています。</p>

<h4><strong>スケッチ</strong></h4>

<p>画面のイメージを紙と鉛筆で描いたものです。画面の要素を検討するために整理に使用します。<br/>
<img src="http://taninno.github.io/images/prototyper/linowski.png" width="320"/><br/>
Linowskiが公開しているスケッチのパターンルールです。スケッチのIllustratorのテンプレートを有償配布しているので宜しければ購入されてもいいかもしれません。図はテンプレートの説明PDFですが、これだけでもスケッチの参考になります。PDFは以下のページの下のほうにあります。<br/>
<a href="http://www.linowski.ca/sketching.php">http://www.linowski.ca/sketching.php</a></p>

<br/>


<p><img src="http://taninno.github.io/images/post/sketch.jpg" width="180"/><br/>
読書メモサービスHartのスケッチです。<br/>
<a href="http://hart.herokuapp.com">http://hart.herokuapp.com</a></p>

<br/>


<h4><strong>ワイヤーフレーム</strong></h4>

<p>紙またはPowerPointやPhotoshopなどのツールで画面を書き表したものです。要素のレイアウトやサイズを考察します。<br/>
<img src="http://taninno.github.io/images/prototyper/wf2.png" width="140"/><br/>
ワイヤーフレームのイメージ<br/>
Putting it All Together: Wireframing the Example App <a href="http://developer.android.com/training/design-navigation/wireframing.html">http://developer.android.com/training/design-navigation/wireframing.html</a></p>

<br/>


<h4><strong>モックアップ</strong></h4>

<p>ハリボテをあたかも実際に動いているように見せて画面の操作感や画面間の遷移を確認するものです。ラピッドプロトタイプとも言えるかもしれません。デザインがあたっている状態ができれば好ましいですが、鉛筆で書いたラフスケッチを配置して確認することにも用いられることもあります。モックアップは人によってペーパープロトタイプなどからパソコンで作った画面までを広く含む少し誤解を生みやすい言葉です。個人的にはペーパープロトタイプもモックアップですが、モックアップとだけ言う時はパワポなどのツールでページにシェイプを配置してそれをプレゼンテーションモードでクリックしてページを移動させたものを指すようにしています。またはデザイナーがPhotoshopで作成した画面を画面遷移できるようにしたものも含みます。<br/>
<img src="http://taninno.github.io/images/prototyper/power.png" width="480"/><br/>
モックアップ作成イメージ<br/>
PowerMockup <a href="http://www.powermockup.com/">http://www.powermockup.com/</a></p>

<br/>


<h4><strong>プロトタイプ</strong></h4>

<p>製品版と同じ技術を使用したプロダクトレベルでの確認用の成果物です。どちらかと言うとブレッドボード・プロトタイピングかもしれません。ソースコードがそのままプロダクトに流用されることもありますが、そのような場合にはアーキテクチャレベルでの議論も含める必要がでてくるため注意が必要です。モックアップとは違い一枚絵で表記されていたボタンなども製品と同じコンポーネントで、WebでればHTMLでCSSで装飾し、AndroidならレイアウトXMLで宣言します。そのため実際の開発で使用するIDEなどを使用することが多く、UIの検証というよりは非機能要件の検証の意味合いが強くなります。目的としてはプロトタイプでは技術検証や非機能要件の検証、モックアップは主にUIの操作性の検証とUXの実現可能性を検証します。<br/>
<img src="http://taninno.github.io/images/prototyper/blend.png" width="480"/><br/>
Windows ストア アプリのプロトタイプ作成イメージ<br/>
Visual Studio 2013 <a href="http://www.microsoft.com/visualstudio">http://www.microsoft.com/visualstudio</a></p>

<br/>


<br/>


<h3>3.それぞれの成果物の作成目的</h3>

<p>それぞれの方法は目的が違いますが、全体としてはより具体的に（ローフィデリティからハイフィデリティ）段階を移していきます。全てを通るわけではなく、個人的には1→4が多いです。</p>

<p>ローフィデリティ<br/>
↑</p>

<ol>
<li>紙に手書きするスケッチ → 画面のアイディアを考察するため</li>
<li>ペーパープロトタイプ → 専門チーム内でのインタラクションの共通理解のため</li>
<li>一枚絵のモックアップ → ビジュアルを含めたインタラクションの早期確認のため（デザインが既にある場合のみ）</li>
<li>操作可能なモックアップ → UIの操作性の検証とUXの実現可能性を検証のため</li>
<li>ソースコードから作るプロトタイプ → 技術検証や非機能要件の検証のため</li>
</ol>


<p>↓<br/>
ハイフィデリティ</p>

<br/>


<br/>


<h3>4.モックアップツール</h3>

<p>ここでのモックアップツールは、上記の3.と4.を作成するためのツールになります。プロトタイプツールと言ったりもしますが、5.を指すわけでなく、3.と4.にあたります。ややこしい言い方になってしまいますが、モックアップツールとプロトタイピングツールは同じものを指します。それはプロトタイプをブレッドボード・プロトタイピングと定義しているため、プロトタイプを作るにはIDEなどの本番の開発環境を用いるためです。そういう意味では狭義のプロトタイピングツールと言うものはありません。</p>

<p><strong>Designer’s Toolkit: Road Testing Prototype Tools</strong><br/>
<a href="http://www.cooper.com/journal/2013/07/designers-toolkit-proto-testing-for-prototypes">http://www.cooper.com/journal/2013/07/designers-toolkit-proto-testing-for-prototypes</a></p>

<p>アラン・クーパーさんのブログでモックアップツール関するものがありますが、その中にPrototyperも取り上げられてます。注目なのは比較されている10個のうちインタラクションの項目がHighなのはPrototyperとproto.ioの2つだけでした。</p>

<p><img src="http://taninno.github.io/images/prototyper/summaryChart.png" width="520"/><br/>
via : <a href="http://www.cooper.com/journal/2013/07/designers-toolkit-proto-testing-for-prototypes">http://www.cooper.com/journal/2013/07/designers-toolkit-proto-testing-for-prototypes</a></p>

<p>proto.ioもとても便利なツールです。ただWebブラウザ上で動作するため、個人では便利ですがある程度大きな規模の会社ではデスクトップアプリケーションである必要が出てくるかと思います。個人的にはproto.ioとPrototyperの2つがモックアップを作るなかで1番好きなツールです。どちらもインタラクションの設定が細かくできることが特徴です。</p>

<p><img src="http://taninno.github.io/images/prototyper/protoio.png" width="240"/><br/>
<strong>proto.io</strong><br/>
<a href="http://proto.io/">http://proto.io/</a></p>

<p>他には<a href="https://popapp.in/">POP</a>や<a href="https://www.flinto.com/">Flinto</a>もありますが、ワイヤーフレームの段階というよりもスケッチ段階で使用することが多くなります。まだUIを考え始めた段階で手軽にできるのが助かります。</p>

<p><img src="http://taninno.github.io/images/prototyper/pop.png" width="240"/><br/>
<strong>POP</strong><br/>
<a href="https://popapp.in/">https://popapp.in/</a></p>

<br/>


<br/>


<h3>5.Prototyper</h3>

<p>PrototyperはJustinmind社によるモックアップツールです。モックアップツールにはproto.ioなどのWebブラウザが多いですが、Prototypeは珍しくスタンドアローンのデスクトップアプリです。</p>

<p><strong>Prototyper</strong><br/>
<a href="http://www.justinmind.com/">http://www.justinmind.com/</a><br/>
<img src="http://taninno.github.io/images/prototyper/prototyper.png" width="240"/></p>

<p>製品名にはプロトタイプ（“prototype”）が含まれていますが、製品に近い技術で作成されるプロトタイプというよりは、動きやコンポジションなどを確認するモックアップに近いです。PrototyperではさらにWordやPDFへの画面仕様書の自動出力機能があります。仕様書に載せる画面はツールから出力したものを使用します。手戻りがあっても画面仕様書の反映作業が大幅に短縮できます。Wordのフォーマットも自分でカスタマイズできます。</p>

<p><img src="http://taninno.github.io/images/prototyper/word.png" width="240"/><br/>
Wordへ出力する画面を選択できます<br/>
via : Prototyper <a href="http://www.justinmind.com/">http://www.justinmind.com/</a></p>

<br/>


<br/>


<h3>6.モックアップにはインタラクションが必要</h3>

<p>先のモックアップの説明ではPOPのような一枚絵を使用すると記載しましたが、Prototyperやproto.ioなどのインタラクションが設定できるツールを活用させてもらうことでモックアップ段階でもボタンやテキストフィールドなどのコンポーネントを操作可能な状態の画面をスマートフォンなどの実機で操作することができるようになります。</p>

<p><img src="http://taninno.github.io/images/prototyper/input.png" width="240"/><br/>
Prototyperのコンポーネントは実際に文字入力をすることもできます<br/>
via : Prototyper <a href="http://www.justinmind.com/">http://www.justinmind.com/</a></p>

<p>インタラクションを設定するのは少し手間ですが、このレベルでの画面操作を盛り込むことで、早期に実際の製品にとても近い操作でユーザーテストを実施することができます。これは実機で操作できることに意味があります。特にモバイルではスマートフォンのタップしやすい領域内にボタンがあるかどうかなどを確認する必要があります。そして画面がスクロールできることやタップしやすいかなどの基本的なUIの検証を行います。これをワイヤーフレームやプロトタイピングなどの少し工程が進んだ時に行っては、間違いに気付いたとしても手戻りが多くなってしまいます。</p>

<p><img src="http://taninno.github.io/images/prototyper/device.png" width="auto"/><br/>
PowerPointのような感覚でスクロール可能な実機のモックアップを作ることが出来ます<br/>
via : Prototyper <a href="http://www.justinmind.com/">http://www.justinmind.com/</a></p>

<br/>


<br/>


<h3>7.モックアップ主導のアプローチ</h3>

<p>POPやFlintoをワイヤーフレーム段階で使用しないのは、実質的にワイヤーフレームをモックアップないしローフィデリティなプロトタイピングでまかなっているからです。ワークフローに関係することですが、動かないワイヤーフレームを書くよりはモックアップとしてテストもできる成果物を作成した方が効率が良いと思っています。なので、UIのスケッチの後はワイヤーフレームではなくモックアップの作成を行っています。この動かせる成果物のメリットに関しては私より長谷川さんの記事が分かりやすいとおもいます。</p>

<p><strong>触れる・動くによって変わるデザインプロセス</strong><br/>
<a href="http://www.yasuhisa.com/could/article/webdesign-and-prototyping/">http://www.yasuhisa.com/could/article/webdesign-and-prototyping/</a></p>

<p>少し昔はモックアップを作るのにFlashとActionScriptなどで工数がかかるために気軽に作るものではありませんでした。そのためワイヤーフレームというドキュメントを元にUIの議論が行われてきました。けれども今はPrototyperなどのツールを用いればFlashよりも簡単に早く作ることができるようになります。モックアップが作りやすくなったことでワイヤーフレームの作成の代替手段としてモックアップを選択可能になりました。どうせ作るのでしたら操作可能なワイヤーフレームのほうが関係者へのお披露目でも理解していただきやすくなります。</p>

<p><strong>Inspiring UI Wireframe Sketches</strong><br/>
<a href="http://webdesignledger.com/inspiration/inspiring-ui-wireframe-sketches">http://webdesignledger.com/inspiration/inspiring-ui-wireframe-sketches</a></p>

<p>上記の記事のように多くの方が綺麗な画面を描かれていますが、あまり効果的ではないと考えています。わざと雑に描くことはないですが、FireworksやPhotoshopでステンシルを配置するのに時間をかけるのであれば、Prototyperで配置するのと時間は変わらないと思います。同じボタンのステンシルを配置しても、Prototyperなら実機でタップできるボタンができあがります。</p>

<p><img src="http://taninno.github.io/images/prototyper/wf.png" width="240"/><br/>
画面を綺麗に描いてもUIの操作感は検証することができません。<br/>
Inspiring UI Wireframe Sketches <a href="http://webdesignledger.com/inspiration/inspiring-ui-wireframe-sketches">http://webdesignledger.com/inspiration/inspiring-ui-wireframe-sketches</a></p>

<p>動くものを作らなくても、パワポやPhotoshopなどで作った画面をペーパープロトタイピングすることもありますが、できれば早い時期にスケッチでおおよそのイメージが掴めてきたら、それを検証するためにも操作可能なモックアップを作成すると良いと思います。ペーパープロトはスケッチ段階中であれば自分またはチーム間の確認のためには有効だと思いますが、ユーザーテストに使用するには被験者に慣れと画面を想像するスキルが求められることになります。ユーザーに試していただくためにもスケッチを手短にして早めにモックアップに着手することが効率が良いと考えています。</p>

<p><img src="http://taninno.github.io/images/prototyper/sketch.png"/><br/>
スケッチは綺麗に書かず、これくらいレベルでモックアップに着手します。<br/>
受諾UXアプローチ <a href="http://taninno.github.io/blog/2013/05/16/my-ux-design-approach/">http://taninno.github.io/blog/2013/05/16/my-ux-design-approach/</a></p>

<p>HTMLなどの知識があれば、Prototyperなどの専用ツールではなく、HTMLを作成すればより早く開発に着手することができ、工数を短縮できます。</p>

<p><img src="http://taninno.github.io/images/prototyper/responsive.png" width="240" /><br/>
<strong>Create a responsive wireframe</strong><br/>
<a href="http://www.creativebloq.com/javascript/create-responsive-wireframe-3133034">http://www.creativebloq.com/javascript/create-responsive-wireframe-3133034</a></p>

<br/>


<br/>


<h3>8.Prototyper Tips</h3>

<!-- Place this tag in your head or just before your close body tag. -->


<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>




<!-- Place this tag where you want the widget to render. -->


<div class="g-post" data-href="https://plus.google.com/107539786331492217195/posts/Avb5MG6uQAX"></div>




<!-- Place this tag in your head or just before your close body tag. -->


<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>




<!-- Place this tag where you want the widget to render. -->


<div class="g-post" data-href="https://plus.google.com/107539786331492217195/posts/NsU7JwH1NW2"></div>




<!-- Place this tag in your head or just before your close body tag. -->


<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>




<!-- Place this tag where you want the widget to render. -->


<div class="g-post" data-href="https://plus.google.com/107539786331492217195/posts/XeUyNu4Yxyp"></div>


<p>（続く）</p>
]]></content>
  </entry>
  
</feed>
